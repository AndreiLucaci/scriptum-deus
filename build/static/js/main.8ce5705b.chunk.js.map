{"version":3,"sources":["types/actions.ts","types/index.ts","redux/store.ts","redux/reducers/bible.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BibleActions","store","createStore","state","action","type","NEW_DAILY_TEXT","Title","Typography","Content","Layout","Header","Footer","Sider","App","className","style","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qHAIO,IAAKA,EAAZ,kC,SAAYA,K,iCAAAA,M,yDCJZ,kE,4KCGaC,EAAQC,aCDO,SAACC,EAAYC,GACvC,OAAQA,EAAOC,MACb,KAAKL,eAAaM,eAElB,QACE,OAAOH,M,QCALI,EAAUC,IAAVD,MACAE,EAAmCC,IAAnCD,QAASE,EAA0BD,IAA1BC,OAAQC,EAAkBF,IAAlBE,OAAQC,EAAUH,IAAVG,MAmBlBC,EAjBC,kBACd,cAAC,IAAD,CAAUb,MAAOA,EAAjB,SACE,eAAC,IAAD,WACE,cAACY,EAAD,CAAOE,UAAU,QAAjB,mBACA,eAAC,IAAD,WACE,cAACJ,EAAD,CAAQI,UAAU,SAAlB,SACE,cAACR,EAAD,gCAEF,cAACE,EAAD,CAASO,MAAO,CAAEC,UAAW,UAA7B,SACE,cAACV,EAAD,6BAEF,cAACK,EAAD,8BCPOM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8ce5705b.chunk.js","sourcesContent":["export type Action = {\n  type: string;\n};\n\nexport enum BibleActions {\n  NEW_DAILY_TEXT = \"NEW_DAILY_TEXT\",\n}\n","export * from \"./actions\";\nexport * from \"./bible\";\n","import { createStore } from \"redux\";\nimport { bibleReducer } from \"./reducers\";\n\nexport const store = createStore(bibleReducer);\n","import { Action, BibleActions } from \"../../types\";\n\nexport const bibleReducer = (state: any, action: Action) => {\n  switch (action.type) {\n    case BibleActions.NEW_DAILY_TEXT:\n      return state;\n    default:\n      return state;\n  }\n};\n","import React, { FC } from \"react\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport { Typography, Layout } from \"antd\";\n\nimport { store } from \"./redux\";\n\nconst { Title } = Typography;\nconst { Content, Header, Footer, Sider } = Layout;\n\nconst App: FC = () => (\n  <Provider store={store}>\n    <Layout>\n      <Sider className=\"sider\">Sider</Sider>\n      <Layout>\n        <Header className=\"header\">\n          <Title> Scriptum Deus </Title>\n        </Header>\n        <Content style={{ textAlign: \"center\" }}>\n          <Title>Hello World!</Title>\n        </Content>\n        <Footer>Footer</Footer>\n      </Layout>\n    </Layout>\n  </Provider>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}